{"version":3,"file":"component---src-templates-blog-index-js-7fc0b6dc05ec2788fabd.js","mappings":"oIAYA,IAVkBA,GAEV,2BAASC,UAAU,gDACf,uBAAKA,UAAU,gCACVD,EAAME,U,qCCQvB,IAZkBF,GAEd,+BACE,uBAAKC,UAAU,yFACb,sBAAIA,UAAU,mFACXD,EAAMG,Q,8ICmBjB,MAhBsBH,IAClB,OACI,uBAAKI,GAAIJ,EAAMK,KAAMJ,UAAW,gGANjBK,EAMgIN,EAAMM,MALlJA,EAAQ,GAAM,EAAI,sBAAwB,gBAMzC,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAAST,EAAMU,eAAgBC,IAAKX,EAAMG,MAAOF,UAAU,mCAC/E,uBAAKA,UAAU,sFACX,gBAAC,KAAD,CAAMW,GAAIZ,EAAMa,IAAM,KAClB,wBAAMZ,UAAU,gCAAgCD,EAAMc,UACtD,sBAAIb,UAAU,mCAAmCD,EAAMG,OACvD,qBAAGF,UAAU,mBAAmBD,EAAMe,aACtC,qBAAGd,UAAU,yBAAwB,kBAbzD,IAAuBK,CAKnB,ECwCJ,MAhDc,IAAsB,IAArB,YAAEU,GAAkB,EAC/B,MAAM,iBAAEC,EAAF,aAAoBC,GAAiBF,EACrCG,EAAoB,GAC1B,IAAI,IAAIC,EAAI,EAAGA,GAAKJ,EAAYK,cAAeD,IAC3CD,EAAkBG,KACd,gBAAC,KAAD,CAAMV,GAAW,IAANQ,EAAD,kBAGGA,EACRG,IAAKH,GACJA,IAAMJ,EAAYQ,gBAChB,0BAAQC,KAAK,SAASxB,UAAU,yFAAyFmB,GAEzH,0BAAQK,KAAK,SAASxB,UAAU,8EAA8EmB,KAM9H,OACI,uBAAKnB,UAAU,8BACX,uBAAK,aAAW,aAAaA,UAAU,kFAClCgB,GACG,gBAAC,KAAD,CAAML,GAAIK,GACN,0BAAQQ,KAAK,SAASxB,UAAU,oGAC5B,wBAAMA,UAAU,WAAU,YAC1B,uBAAKyB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,QAAQ,cAAY,OAAO3B,UAAU,WAClG,wBAAM4B,SAAS,UAAUC,EAAE,oHAAoHC,SAAS,eAKvKZ,EACAD,GACG,gBAAC,KAAD,CAAMN,GAAIM,GACN,0BAAQO,KAAK,SAASxB,UAAU,oGAC5B,wBAAMA,UAAU,WAAU,QAC1B,uBAAKyB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,QAAQ,cAAY,OAAO3B,UAAU,WAClG,wBAAM4B,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,gBAnBrL,ECoDJ,MA/DiB,IAA4B,IAA3B,KAAEC,EAAF,YAAQhB,GAAkB,EACxC,OACI,gBAACiB,EAAA,EAAD,CAAQC,UAAU,OAAOC,gBAAgB,sCACrC,gBAACC,EAAA,EAAD,KACI,wBAAMC,IAAI,YAAYC,KAAK,gCAE/B,gBAACC,EAAA,EAAD,CAAUpC,MAAM,SAChB,gBAACqC,EAAA,EAAD,KAEQR,EAAKS,OAAOC,MAAMC,KAAI,CAACC,EAAMtC,IACzB,gBAAC,EAAD,CACIA,MAAOA,EACPH,MAAOyC,EAAKA,KAAKC,YAAY1C,MAC7BW,SAAU8B,EAAKA,KAAKC,YAAYC,KAChC/B,YAAc6B,EAAKA,KAAKC,YAAY9B,YAAYgC,OAAS,IACrDH,EAAKA,KAAKC,YAAY9B,YAAYiC,UAAU,EAAG,KAAO,MAEtDJ,EAAKA,KAAKC,YAAY9B,YAE1BF,IAAG,SAAW+B,EAAKA,KAAKvC,KACxBA,KAAMuC,EAAKA,KAAKvC,KAChBK,cAAekC,EAAKA,KAAKC,YAAYnC,cACrCa,IAAKqB,EAAKA,KAAKxC,QAK/B,gBAAC,EAAD,CAAOY,YAAaA,IA1B5B,C","sources":["webpack://jeff-rescignano/./src/components/BlogList.js","webpack://jeff-rescignano/./src/components/TinyHero.js","webpack://jeff-rescignano/./src/components/BlogListItem.js","webpack://jeff-rescignano/./src/components/Pager.js","webpack://jeff-rescignano/./src/templates/blog-index.js"],"sourcesContent":["import React from \"react\";\n\nconst BlogList = (props) => {\n    return (\n        <section className=\"p-4 lg:p-8 bg-coolGray-800 text-coolGray-100\">\n            <div className=\"container mx-auto space-y-12\">\n                {props.children}\n            </div>\n        </section>\n    );\n};\n\nexport default BlogList;","import React from \"react\";\n\nconst TinyHero = (props) => {\n  return (\n    <section>\n      <div className=\"container mx-auto flex flex-col items-center px-4 pb-8 pt-16 text-center xl:max-w-3xl\">\n        <h1 className=\"text-4xl sm:text-5xl font-bold leading-none block w-full text-sky-600 lg:inline\">\n          {props.title}\n        </h1>\n      </div>\n    </section>\n  );\n};\n\nexport default TinyHero;\n","import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nfunction left_or_right(index) {\n    return index % 2 === 0 ? \"lg:flex-row-reverse\" : \"lg:flex-row\";\n}\n\nconst BlogListItem = (props) => {\n    return (\n        <div id={props.slug} className={\"flex flex-col overflow-hidden rounded-md shadow-sm betterhover:hover:scale-105 duration-200 \" + left_or_right(props.index)}>\n            <GatsbyImage image={getImage(props.featuredImage)} alt={props.title} className=\"h-80 bg-slate-700 aspect-video\" />\n            <div className=\"flex flex-col justify-center flex-1 p-6 bg-gradient-to-r from-zinc-700 to-gray-600\">\n                <Link to={props.url + \"/\"}>\n                    <span className=\"text-xs uppercase text-white\">{props.top_text}</span>\n                    <h3 className=\"text-3xl font-bold text-sky-600\">{props.title}</h3>\n                    <p className=\"my-6 text-white\">{props.description}</p>\n                    <p className=\"self-start text-white\">Read More Â»</p>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default BlogListItem;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Pager = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath } = pageContext;\n    const pageNumberButtons = [];\n    for(let i = 1; i <= pageContext.numberOfPages; i++) {\n        pageNumberButtons.push(\n            <Link to={(i === 1) ? (\n                `/blog/`\n              ) : (\n                `/blog/${i}`\n              )} key={i}>\n                {(i === pageContext.humanPageNumber) ? (\n                    <button type=\"button\" className=\"inline-flex text-white items-center px-4 py-2 text-sm font-semibold border bg-sky-600\">{i}</button>\n                ) : (\n                    <button type=\"button\" className=\"inline-flex text-white items-center px-4 py-2 text-sm font-semibold border\">{i}</button>\n                )}\n                \n            </Link>\n        );\n    }\n    return (\n        <div className=\"text-center content-center\">\n            <nav aria-label=\"Pagination\" className=\"inline-flex -space-x-px rounded-md shadow-sm bg-coolGray-800 text-coolGray-100\">\n                {previousPagePath && (\n                    <Link to={previousPagePath}>\n                        <button type=\"button\" className=\"inline-flex items-center px-2 py-2 text-sm font-semibold border rounded-l-md border-coolGray-700\">\n                            <span className=\"sr-only\">Previous</span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"white\" aria-hidden=\"true\" className=\"w-5 h-5\">\n                                <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\"></path>\n                            </svg>\n                        </button>\n                    </Link>\n                )}\n                {pageNumberButtons}\n                {nextPagePath && (\n                    <Link to={nextPagePath}>\n                        <button type=\"button\" className=\"inline-flex items-center px-2 py-2 text-sm font-semibold border rounded-r-md border-coolGray-700\">\n                            <span className=\"sr-only\">Next</span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"white\" aria-hidden=\"true\" className=\"w-5 h-5\">\n                                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\"></path>\n                            </svg>\n                        </button>\n                    </Link>\n                )}\n            </nav>\n        </div>\n    );\n};\n\nexport default Pager;\n","import * as React from \"react\"\n\nimport { graphql } from 'gatsby'\nimport { Helmet } from \"react-helmet\"\n\nimport Layout from \"../templates/Layout\"\nimport TinyHero from \"../components/TinyHero\"\nimport BlogList from \"../components/BlogList\"\nimport BlogListItem from \"../components/BlogListItem\"\nimport Pager from \"../components/Pager\"\n\nconst BlogPage = ({ data, pageContext }) => {\n    return (\n        <Layout pageTitle=\"Blog\" pageDescription=\"Jeff Rescignano's Development Blog\">\n            <Helmet>\n                <link rel=\"canonical\" href=\"https://jeffresc.dev/blog/\" />\n            </Helmet>\n            <TinyHero title=\"Blog\" />\n            <BlogList>\n                {\n                    data.allMdx.edges.map((node, index) => (\n                        <BlogListItem\n                            index={index}\n                            title={node.node.frontmatter.title}\n                            top_text={node.node.frontmatter.date}\n                            description={(node.node.frontmatter.description.length > 512) ? (\n                                node.node.frontmatter.description.substring(0, 512) + \"...\"\n                            ) : (\n                                node.node.frontmatter.description\n                            )}\n                            url={`/blog/${node.node.slug}`}\n                            slug={node.node.slug}\n                            featuredImage={node.node.frontmatter.featuredImage}\n                            key={node.node.id}\n                        />\n                    ))\n                }\n            </BlogList>\n            <Pager pageContext={pageContext} />\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query($skip: Int!, $limit: Int!) {\n        allMdx(\n            sort: { fields: [frontmatter___date], order: DESC }\n            skip: $skip\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    id\n                    slug\n                    frontmatter {\n                        date(formatString: \"MMMM D, YYYY\")\n                        title\n                        description\n                        featuredImage {\n                            childImageSharp {\n                                gatsbyImageData (\n                                    width: 1080\n                                    placeholder: BLURRED\n                                    formats: [AUTO, WEBP, AVIF]\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default BlogPage"],"names":["props","className","children","title","id","slug","index","G","image","getImage","featuredImage","alt","to","url","top_text","description","pageContext","previousPagePath","nextPagePath","pageNumberButtons","i","numberOfPages","push","key","humanPageNumber","type","xmlns","viewBox","fill","fillRule","d","clipRule","data","Layout","pageTitle","pageDescription","Helmet","rel","href","TinyHero","BlogList","allMdx","edges","map","node","frontmatter","date","length","substring"],"sourceRoot":""}